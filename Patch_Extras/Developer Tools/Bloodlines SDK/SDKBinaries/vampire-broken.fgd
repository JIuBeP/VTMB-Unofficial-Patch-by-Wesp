//====== Copyright © 2003-2020, Troika Games, Inc. All rights reserved. =======
//
// Purpose: Vampire Bloodlines game definition file (.fgd) 
// Version: 1.3 beta
// Edition: Original VtMB [Broken/NotWorking Entities]
// Written: Psycho-A
//
//=============================================================================


//-------------------------------------------------------------------------------------------------------------------
// NOTE: These are entities found in game code but have broken functionality or disabled.
//-------------------------------------------------------------------------------------------------------------------


//*******************************************************************************************************************
//*******************************************************************************************************************
//
// Environmental Effects
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// env_dustpuff [common]
//====================================================================================================================

@PointClass base(TargetnameRot,Parentname)
line (
	255 255 255,
	targetname,
	parentname
)
size( -8 -8 -8, 8 8 8 ) = env_dustpuff : 
	"An entity that can emit dust puffs. \nDoesn't work in VtMB."
[
	scale(float) : "Scale" : 8 : "Size of the dust puff."
	speed(float) : "Speed" : 16 : "Speed at which the dust particles should move."

	color(color255) : "Dust color" : "128 128 128"

	// Inputs
	input SpawnDust(void) : "Spawn a dust puff."
]


//====================================================================================================================
// env_fire [common]
//====================================================================================================================

@PointClass base(Targetname,Parentname,EnableDisable)
line (
	255 255 255,
	targetname,
	parentname
)
iconsprite("editor/env_fire") color(0 180 0) = env_fire : 
	"An entity that handles a single flame at its origin. "+
	"The flame causes heat 'damage' to other env_fire entities around it, and will eventually ignite non-flaming env_fire entities nearby, causing the fire to spread. "+
	"\nThis entity have been removed from VtMB. Use env_particle instead."
[
	health(integer) : "Duration" : 30 : "Amount of time the fire will burn."
	firesize(integer) : "Size" : 64 : "Height (in world units) of the flame."
	fireattack(integer) : "Attack" : 4 : "Amount of time the fire takes to grow to full strength."
	firetype(choices) : "Type" : 0 =
	[
		0 : "Natural"
		1 : "Plasma"
	]
	spawnflags(flags) =
	[
		1:	"Infinite Duration" : 0
		2:	"Smokeless" : 0
		4:	"Start On" : 0
		8:	"Start Full" : 0
		16:	"Don't drop" : 0
		32: "No glow" : 0
		128: "Delete when out" : 0
		256: "Start disabled" : 0
	]

	ignitionpoint(float) : "Ignition Point" : 32
	damagescale(float) : "Damage Scale" : "1.0"

	// Inputs
	input Enable(void)				: "Enables input and ignition"
	input Disable(void)				: "Disables input and ignition"
	input StartFire(void)			: "Start the fire"
	input Extinguish(float)			: "Puts out the fire premanently in the number of seconds specified"
	input ExtinguishTemporary(float): "Puts out the fire temporarily in the number of seconds specified"

	// Outputs
	output OnIgnited(void)			: "Fires when the fire is first ignited"
	output OnExtinguished(void)		: "Fires when the fire is fully extinguished"
]


//====================================================================================================================
// env_firesource [common]
//====================================================================================================================

@PointClass base(Targetname,Parentname)
line (
	255 255 255,
	targetname,
	parentname
)
iconsprite("editor/env_firesource") color(255 255 0) sphere(fireradius) = env_firesource : 
	"An entity that provides heat to all nearby env_fire entities. Cannot be extinguished. \nDoesn't work in VtMB."
[
	spawnflags(flags) =
	[
		1:	"Start On" : 0
	]

	fireradius(float) : "Radius" : 128 : "The radius around this entity in which to provide heat."
	firedamage(float) : "Intensity / Damage" : 10 : "Amount of heat 'damage' to apply to env_fire entities within the radius."

	// Inputs
	input Enable(void) : "Enable fire source."
	input Disable(void) : "Disable fire source."
]



//====================================================================================================================
// env_global [common]
//====================================================================================================================

@PointClass base(Targetname) size(-8 -8 -8, 8 8 8) = env_global :
	"An entity to control a game-specific global states. \nDoesn't seems to be working in VtMB."
[
	globalstate(choices) : "Global State to Set" =
	[
		"gordon_precriminal" : "Gordon pre-criminal" 
		"antlion_allied" : "Antlions are player allies" 
		"player_stealth" : "Player in APC is disguised as combine" 
	]

	initialstate(choices) : "Initial State" : 0 =
	[
		0 : "Off"
		1 : "On"
		2 : "Dead"
	]
	spawnflags(flags) =
	[
		1 : "Set Initial State" : 0
	]

	// Inputs
	input TurnOn(void) : "Set state of global to ON"
	input TurnOff(void) : "Set state of global to OFF"
	input Toggle(void) : "Toggles state of global between ON and OFF"
	input Remove(void) : "Set state of global to DEAD"
]



//====================================================================================================================
// env_message [common]
//====================================================================================================================

@PointClass base(Targetname) size(-8 -8 -8, 8 8 8) = env_message : 
	"An entity that draws a text message on player's HUDs. \nDoesn't seems to be working in VtMB."
[
	message(string) : "Message Text"
	spawnflags(flags) =
	[
		1: "Play Once" : 0
		2: "All Clients" : 0
	]
	messagesound(sound) : "Sound Effect" : "" : "When the message is shown, this sound effect will be played, originating from this entity."
	messagevolume(string) : "Volume 0-10" : "10" : "Volume of the sound effect."
	messageattenuation(Choices) : "Sound Radius" : 0 =
	[
		0 : "Small Radius"
		1 : "Medium Radius"
		2 : "Large Radius"
		3 : "Play Everywhere"
	]
	
	// Inputs
	input ShowMessage(void) : "Shows the message and plays the sound."
	
	// Outputs
	output OnShowMessage(void) : "Fired when the message is activated."
]



//====================================================================================================================
// env_wind [common]
//====================================================================================================================

@PointClass base(TargetnameRot) iconsprite("editor/env_wind.vmt") = env_wind : 
	"An entity to control wind in the map. \nDoesn't seems to be working in VtMB."
[
	gustsound(sound) : "Gust Sound Filename" : "" : "Sound to be played to simulate the gusting wind."
	minwind(integer) : "Min normal speed" : 20 : "Minimum speed of the wind while idling."
	maxwind(integer) : "Max normal speed" : 50 : "Maximum speed of the wind while idling."

	mingust(integer) : "Min gust speed" : 100 : "Minimum speed of wind gusts."
	maxgust(integer) : "Max gust speed" : 250 : "Maximum speed of wind gusts."

	mingustdelay(integer) : "Min gust delay" : 10 : "Minimum time delay between random gusts."
	maxgustdelay(integer) : "Max gust delay" : 20 : "Maximum time delay between random gusts."

	gustdirchange(integer) : "Max gust dir change (degrees)" : 20 : "Maximum amount that the wind's direction changes due to a gust."
]



//====================================================================================================================
// gibshooter [common]
//====================================================================================================================

@PointClass base(GibShooterBase) iconsprite("editor/gibshooter.vmt") = gibshooter : 
	"An entity that shoots out gibs. Style of body part depends on language type. \nDoesn't seems to be working in VtMB."
[
]
	


	
	
	
	








//*******************************************************************************************************************
//*******************************************************************************************************************
//
// Function Brushes
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// func_dustcloud [common]
//====================================================================================================================

@SolidClass base(BModelParticleSpawner) = func_dustcloud : 
	"A brush entity that spawns a translucent dust cloud within its volume. \nDoesn't work in VtMB. Use func_particle instead."
[
	Alpha(integer) : "Alpha" : 30

	SizeMin(string) : "Minimum Particle Size" : 100
	SizeMax(string) : "Maximum Particle Size" : 200
]
	


	
	
	
	








//*******************************************************************************************************************
//*******************************************************************************************************************
//
// Triggers
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// trigger_wind [common]
//===================================================================================================================

@SolidClass base(ExtTrigger) = trigger_wind : 
	"A trigger volume that pushes physics objects that touch it."
[
	Speed(integer) : "Speed" : 200   : "The baseline for how hard the wind blows."
	SpeedNoise(integer) : "Speed Noise" : 0 : "Noise added to wind speed +/-"
	DirectionNoise(integer) : "Direction Noise" : 10 : "Noise added to wind direction."
	HoldTime(integer) : "Hold Time" : 0 : "Baseline for how long to wait before changing wind."
	HoldNoise(integer) : "Hold Noise" : 0 : "Noise added to how long to wait before changing wind."

	// Inputs
	input SetSpeed(integer) : "Set the baseline for how hard the wind blows."
]











//*******************************************************************************************************************
//*******************************************************************************************************************
//
// Misc Point Entities
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// info_null [common]
//====================================================================================================================

@PointClass base(Targetname) size(-8 -8 -8, 8 8 8) = info_null : 
	"An entity that's immediately removed on spawning. \nDoesn't any affect in VtMB."
[
]


//===================================================================================================================
// vgui_screen [common]
//===================================================================================================================
// VTMB-adaptation:
//  removed: Angles (included)

@BaseClass base(TargetnameRot,Parentname) = vgui_screen_base
[
	panelname(string) : "Panel Name"
	overlaymaterial(material) : "Overlay Material" : "" : "Name of a material to overlay over the top of the VGUI screen. NOTE: This material must write Z for the VGUI screen to work."
	width(integer) : "Panel Width in World" : 32 : "Width of the panel in units."
	height(integer) : "Panel Height in World" : 32 : "Height of the panel in units."

	// Inputs
	input SetActive(void) : "Make the vgui screen visible."
	input SetInactive(void) : "Make the vgui screen invisible."
]

@PointClass base(vgui_screen_base)
line (
	255 255 255,
	targetname,
	parentname
)
size(-4 -4 -4, 4 4 4) = vgui_screen : 
	"A VGUI screen. Useful for in-world monitors. \nEntity is broken in VtMB game."
[
]












//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// End of FGD
// 
//*******************************************************************************************************************
//*******************************************************************************************************************
